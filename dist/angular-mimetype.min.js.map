{"version":3,"sources":["utils/polyfill/base64.polyfill.js","core.module.js","constants/constants.module.js","directives/directives.module.js","factories/factories.module.js","filters/filters.module.js","utils/utils.module.js","constants/filetype.constant.js","factories/mimetype.factory.js","utils/utils.service.js","filters/mimetype.filter.js","utils/polyfill/string.polyfill.js"],"names":["tableStr","table","angular","module","constant","iVBORw0KGgo","regex","name","type","offset","/9j/","JVBERg","R0lGOD","SUkqAA","TU0AKg","AAABAA","OEJQUw","MimeTypeFactory","$util","fileType","EMPTY_STRING","toString","fromString","input","isUndefined","part","hex","obj","prop","hop","startsWith","isArray","i","len","length","substr","base64ToHex","toUpperCase","test","regStr","compStr","RegExp","fromArrayBuffer","arrayBuffer","fromBlob","blob","fromAuto","unknown","ArrayBuffer","Blob","String","factory","service","hexToBase64","str","btoa","fromCharCode","apply","replace","split","flag","bin","atob","tmp","charCodeAt","join","key","Object","prototype","hasOwnProperty","call","escapeRegExp","string","mimetypeFilter","mimeType","arguments","filter","window","base64","Error","n","j","a","indexOf","b","c","d","isNaN","str2","this"],"mappings":"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","file":"angular-mimetype.min.js","sourcesContent":["if (!window.atob) {\n  var tableStr = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n  var table = tableStr.split(\"\");\n\n  window.atob = function(base64) {\n    if (/(=[^=]+|={3,})$/.test(base64)) throw new Error(\"String contains an invalid character\");\n    base64 = base64.replace(/=/g, \"\");\n    var n = base64.length & 3;\n    if (n === 1) throw new Error(\"String contains an invalid character\");\n    for (var i = 0, j = 0, len = base64.length / 4, bin = []; i < len; ++i) {\n      var a = tableStr.indexOf(base64[j++] || \"A\"),\n        b = tableStr.indexOf(base64[j++] || \"A\");\n      var c = tableStr.indexOf(base64[j++] || \"A\"),\n        d = tableStr.indexOf(base64[j++] || \"A\");\n      if ((a | b | c | d) < 0) throw new Error(\"String contains an invalid character\");\n      bin[bin.length] = ((a << 2) | (b >> 4)) & 255;\n      bin[bin.length] = ((b << 4) | (c >> 2)) & 255;\n      bin[bin.length] = ((c << 6) | d) & 255;\n    }\n    return String.fromCharCode.apply(null, bin).substr(0, bin.length + n - 4);\n  };\n\n  window.btoa = function(bin) {\n    for (var i = 0, j = 0, len = bin.length / 3, base64 = []; i < len; ++i) {\n      var a = bin.charCodeAt(j++),\n        b = bin.charCodeAt(j++),\n        c = bin.charCodeAt(j++);\n      if ((a | b | c) > 255) throw new Error(\"String contains an invalid character\");\n      base64[base64.length] = table[a >> 2] + table[((a << 4) & 63) | (b >> 4)] +\n        (isNaN(b) ? \"=\" : table[((b << 2) & 63) | (c >> 6)]) +\n        (isNaN(b + c) ? \"=\" : table[c & 63]);\n    }\n    return base64.join(\"\");\n  };\n\n}","(function() {\n  'use strict';\n\n  angular.module('mg.mimetype', ['mg.mimetype.factories', 'mg.mimetype.filters', 'mg.mimetype.directives', 'mg.mimetype.constants']);\n\n})();","(function() {\n  'use strict';\n\n  angular.module('mg.mimetype.constants', []);\n\n})();","(function() {\n  'use strict';\n\n  angular.module('mg.mimetype.directives', []);\n\n})();","(function() {\n  'use strict';\n\n  angular.module('mg.mimetype.factories', ['mg.mimetype.utils', 'mg.mimetype.constants']);\n\n})();","(function() {\n  'use strict';\n\n  angular.module('mg.mimetype.filters', ['mg.mimetype.factories']);\n\n})();","(function() {\n  'use strict';\n\n  angular.module('mg.mimetype.utils', []);\n\n})();","(function() {\n  'use strict';\n\n  angular.module('mg.mimetype.constants')\n    .constant('fileType', {\n      // .PNG....\n      \"iVBORw0KGgo\": {\n        \"regex\": \"^89504E470D0A1A0A\",\n        \"name\": \"png\",\n        \"type\": \"image/png\",\n        \"offset\": \"0\"\n      },\n      \"/9j/\": [\n        // ÿØÿÛ\n        {\n          \"regex\": \"^FFD8FFDB\",\n          \"name\": \"jpeg\",\n          \"type\": \"image/jpeg\",\n          \"offset\": \"0\"\n        },\n        // ÿØÿà ..JF IF..\n        {\n          \"regex\": \"^FFD8FFE0[0-9a-fA-F]{4}4A4649460001\",\n          \"name\": \"jfif\",\n          \"type\": \"image/jpeg\",\n          \"offset\": \"0\"\n        },\n        // ÿØÿá ..Ex if..\n        {\n          \"regex\": \"^FFD8FFE1[0-9a-fA-F]{4}457869660000\",\n          \"name\": \"exif\",\n          \"type\": \"image/jpeg\",\n          \"offset\": \"0\"\n        },\n      ],\n      // %PDF\n      \"JVBERg\": {\n        \"regex\": \"^25504446\",\n        \"name\": \"pdf\",\n        \"type\": \"application/pdf\",\n        \"offset\": \"0\"\n      },\n      \"R0lGOD\": [\n        // GIF87a\n        {\n          \"regex\": \"^474946383761\",\n          \"name\": \"gif\",\n          \"type\": \"image/gif\",\n          \"offset\": \"0\"\n        },\n        // GIF89a\n        {\n          \"regex\": \"^474946383961\",\n          \"name\": \"gif\",\n          \"type\": \"image/gif\",\n          \"offset\": \"0\"\n        }\n      ],\n      // II*.\n      \"SUkqAA\": {\n        \"regex\": \"^49492A00\",\n        \"name\": \"\",\n        \"type\": \"image/tiff\",\n        \"offset\": \"0\"\n      },\n      // MM.*\n      \"TU0AKg\": {\n        \"regex\": \"^4D4D002A\",\n        \"name\": \"\",\n        \"type\": \"image/tiff\",\n        \"offset\": \"0\"\n      },\n      \"AAABAA\": {\n        \"regex\": \"^00000100\",\n        \"name\": \"ico\",\n        \"type\": \"image/ico\",\n        \"offset\": \"0\"\n      },\n      // 8BPS\n      \"OEJQUw\": {\n        \"regex\": \"\",\n        \"name\": \"psd\",\n        \"type\": \"\",\n        \"offset\": \"\"\n      }\n    });\n})();","(function() {\n  'use strict';\n\n  angular.module('mg.mimetype.factories')\n    .factory('mimeType', MimeTypeFactory);\n\n  function MimeTypeFactory($util, fileType) {\n    var MimeTypeFactory = {};\n\n    var MAX_LEN = 255;\n    var EMPTY_STRING = \"\".toString();\n\n    MimeTypeFactory.fromString = function(str) {\n      return fromString(str);\n    };\n\n    MimeTypeFactory.fromArrayBuffer = function(arrayBuffer) {\n      return fromArrayBuffer(arrayBuffer);\n    };\n\n    MimeTypeFactory.fromBlob = function(blob) {\n      return fromBlob(blob);\n    };\n\n    MimeTypeFactory.fromAuto = function(unknown) {\n      if (unknown instanceof ArrayBuffer) {\n        return fromArrayBuffer(unknown);\n      } else if (unknown instanceof Blob) {\n        return fromBlob(unknown);\n      } else if (unknown instanceof String) {\n        return fromString(unknown);\n      } else {\n        return fromString(unknown);\n      }\n    };\n\n    function fromString(input) {\n      if (angular.isUndefined(input))\n        return EMPTY_STRING;\n      var found = null,\n        obj = null,\n        part, hex, res;\n      for (var prop in fileType) {\n        if ($util.hop(fileType, prop) && input.startsWith(prop)) {\n          obj = fileType[prop];\n          if (angular.isArray(obj)) {\n            for (var i = 0, len = obj.length; i < len; i++) {\n              part = input.substr(0, MAX_LEN);\n              hex = $util.base64ToHex(part, false).toUpperCase();\n              res = test(obj[i].regex, hex);\n              if (res)\n                return obj[i].type;\n            }\n          } else {\n            part = input.substr(0, MAX_LEN);\n            hex = $util.base64ToHex(part, false).toUpperCase();\n            res = test(obj.regex, hex);\n            if (res)\n              return obj.type;\n          }\n        }\n      }\n      return EMPTY_STRING;\n    }\n\n    function test(regStr, compStr) {\n      return (new RegExp(regStr)).test(compStr);\n    }\n\n    return MimeTypeFactory;\n  }\n\n})();","(function() {\n  'use strict';\n\n  angular.module('mg.mimetype.utils')\n    .service('$util', UtilService);\n\n  function UtilService() {\n    var service = {};\n\n    service.hexToBase64 = hexToBase64;\n    service.base64ToHex = base64ToHex;\n    service.hop = hop;\n    service.escapeRegExp = escapeRegExp;\n\n    function hexToBase64(str) {\n      return btoa(String.fromCharCode.apply(null,\n        str.replace(/\\r|\\n/g, \"\").replace(/([\\da-fA-F]{2}) ?/g, \"0x$1 \").replace(/ +$/, \"\").split(\" \")));\n    }\n\n    function base64ToHex(str, flag) {\n      flag = !!flag;\n      for (var i = 0, bin = atob(str.replace(/[ \\r\\n]+$/, \"\")), hex = []; i < bin.length; ++i) {\n        var tmp = bin.charCodeAt(i).toString(16);\n        if (tmp.length === 1) tmp = \"0\" + tmp;\n        hex[hex.length] = tmp;\n      }\n      return hex.join(flag ? \" \" : \"\");\n    }\n\n    function hop(obj, key) {\n      return Object.prototype.hasOwnProperty.call(obj, key);\n    }\n\n    function escapeRegExp(string) {\n      return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'); // $& means the whole matched string\n    }\n\n    return service;\n  }\n})();","(function() {\n  'use strict';\n\n  angular.module('mg.mimetype.filters')\n    .filter('mimetype', mimetypeFilter);\n\n  function mimetypeFilter(mimeType) {\n    return function() {\n      return mimeType.fromAuto.apply(mimeType, arguments);\n    };\n  }\n})();","if (!String.prototype.startsWith) {\n  String.prototype.startsWith = function(str2) {\n    return this.indexOf(str2) === 0;\n  };\n}"]}
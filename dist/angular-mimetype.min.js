/**
 * angular-mimetype - An angular plugin to check the mimetype of a given String/Base64/ArrayBuffer
 * @version v0.0.3
 * @author Matteo Gaggiano <m.gaggiano@marchrius.org> (https://marchrius.org/blog)
 * @link https://marchrius.org/blog
 * @maintainers
 * 
 * @license MIT
 */
if(function(){"use strict";angular.module("mg.mimetype",["mg.mimetype.filters","mg.mimetype.directives","mg.mimetype.constants"])}(),function(){"use strict";angular.module("mg.mimetype.constants",[])}(),function(){"use strict";angular.module("mg.mimetype.directives",[])}(),function(){"use strict";angular.module("mg.mimetype.filters",["mg.mimetype.utils","mg.mimetype.constants"])}(),function(){"use strict";angular.module("mg.mimetype.utils",[])}(),function(){"use strict";angular.module("mg.mimetype.providers",[])}(),function(){"use strict";angular.module("mg.mimetype.constants").constant("fileType",{iVBORw0KGgo:{regex:"^89504E470D0A1A0A",name:"png",type:"image/png",offset:"0"},"/9j/":[{regex:"^FFD8FFDB",name:"jpeg",type:"image/jpeg",offset:"0"},{regex:"^FFD8FFE0[0-9a-fA-F]{4}4A4649460001",name:"jfif",type:"image/jpeg",offset:"0"},{regex:"^FFD8FFE1[0-9a-fA-F]{4}457869660000",name:"exif",type:"image/jpeg",offset:"0"}],JVBERg:{regex:"^25504446",name:"pdf",type:"application/pdf",offset:"0"},R0lGOD:[{regex:"^474946383761",name:"gif",type:"image/gif",offset:"0"},{regex:"^474946383961",name:"gif",type:"image/gif",offset:"0"}],SUkqAA:{regex:"^49492A00",name:"",type:"image/tiff",offset:"0"},TU0AKg:{regex:"^4D4D002A",name:"",type:"image/tiff",offset:"0"},AAABAA:{regex:"^00000100",name:"ico",type:"image/ico",offset:"0"},OEJQUw:{regex:"",name:"psd",type:"",offset:""}})}(),function(){"use strict";function e(){}angular.module("mg.mimetype.providers").provider("$mimeType",e)}(),function(){"use strict";function e(){function e(e){return btoa(String.fromCharCode.apply(null,e.replace(/\r|\n/g,"").replace(/([\da-fA-F]{2}) ?/g,"0x$1 ").replace(/ +$/,"").split(" ")))}function t(e,t){t=!!t;for(var r=0,n=atob(e.replace(/[ \r\n]+$/,"")),i=[];r<n.length;++r){var a=n.charCodeAt(r).toString(16);1===a.length&&(a="0"+a),i[i.length]=a}return i.join(t?" ":"")}function r(e,t){return Object.prototype.hasOwnProperty.call(e,t)}function n(e){return e.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")}var i={};return i.hexToBase64=e,i.base64ToHex=t,i.hop=r,i.escapeRegExp=n,i}angular.module("mg.mimetype.utils").service("$util",e)}(),function(){"use strict";angular.module("mg.mimetype.filters").filter("mimetype",["$util","fileType",function(e,t){function r(r){if("undefined"==typeof r)return a;var o,f,g,s=null;for(var l in t)if(e.hop(t,l)&&r.startsWith(l))if(s=t[l],angular.isArray(s)){for(var u=0;u<s.length;u++)if(o=r.substr(0,i),f=e.base64ToHex(o,!1).toUpperCase(),g=n(s[u].regex,f))return s[u].type}else if(o=r.substr(0,i),f=e.base64ToHex(o,!1).toUpperCase(),g=n(s.regex,f))return s.type;return a}function n(e,t){return new RegExp(e).test(t)}var i=255,a="".toString();return function(){var e=1===arguments.length?[arguments[0]]:Array.apply(null,arguments),t=e[0];return t instanceof ArrayBuffer?fromArrayBuffer(t):t instanceof Blob?fromBlob(t):r(t instanceof String?t:t)}}])}(),!window.atob){var tableStr="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",table=tableStr.split("");window.atob=function(e){if(/(=[^=]+|={3,})$/.test(e))throw new Error("String contains an invalid character");e=e.replace(/=/g,"");var t=3&e.length;if(1===t)throw new Error("String contains an invalid character");for(var r=0,n=0,i=e.length/4,a=[];r<i;++r){var o=tableStr.indexOf(e[n++]||"A"),f=tableStr.indexOf(e[n++]||"A"),g=tableStr.indexOf(e[n++]||"A"),s=tableStr.indexOf(e[n++]||"A");if((o|f|g|s)<0)throw new Error("String contains an invalid character");a[a.length]=255&(o<<2|f>>4),a[a.length]=255&(f<<4|g>>2),a[a.length]=255&(g<<6|s)}return String.fromCharCode.apply(null,a).substr(0,a.length+t-4)},window.btoa=function(e){for(var t=0,r=0,n=e.length/3,i=[];t<n;++t){var a=e.charCodeAt(r++),o=e.charCodeAt(r++),f=e.charCodeAt(r++);if((a|o|f)>255)throw new Error("String contains an invalid character");i[i.length]=table[a>>2]+table[a<<4&63|o>>4]+(isNaN(o)?"=":table[o<<2&63|f>>6])+(isNaN(o+f)?"=":table[63&f])}return i.join("")}}String.prototype.startsWith||(String.prototype.startsWith=function(e){return 0===this.indexOf(e)});
//# sourceMappingURL=angular-mimetype.min.js.map
